# -*- coding: utf-8 -*-
# -*- mode: ruby -*-
# vi: set ft=ruby :

VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.box = "CentOS-6.6-x86_64-v20150426"
  config.vm.box_url = "https://developer.nrel.gov/downloads/vagrant-boxes/" + config.vm.box + ".box"
  #config.vm.hostname = "tetsudo_ex"
  #config.ssh.username = "root"
  #config.ssh.password = "soccer10"


  config.vm.network "private_network", ip: "192.168.33.50"
  # config.vm.network "forwarded_port", id: "ssh", guest: 22, host: 2222, protocol: 'tcp'
  config.vm.network "forwarded_port", id: "http", guest: 80, host: 9000, protocol: 'tcp'
  # config.vm.network "forwarded_port", id: "https", guest: 443, host: 443, protocol: 'tcp'
  # config.vm.network "forwarded_port", id: "postgres", guest: 5432, host: 54321, protocol: 'tcp'
  # config.vm.network "forwarded_port", id: "mysql", guest: 3306, host: 3306, protocol: 'tcp'
  # config.vm.synced_folder "../.", "/home/vagrant/workspace/.", type: "nfs"
  config.vm.synced_folder "../.", "/var/www/html/.", :mount_options => ['dmode=777', 'fmode=777']

  # workaround for windows error
  # see http://blog.cles.jp/item/5698
  #Encoding.default_external = 'UTF-8'

  config.vm.provider :virtualbox do |vb|
    vb.name="web_develop"
    vb.customize ["modifyvm", :id, "--memory", "1024", "--cpus", "2", "--ioapic", "on"]
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    vb.customize ["modifyvm", :id, "--natdnsproxy1", "on"]
    vb.customize ["modifyvm", :id, "--natdnspassdomain1", "off"]
    vb.customize ["setextradata", :id, "VBoxInternal/Devices/VMMDev/0/Config/GetHostTimeDisabled", 0]
  end

  # config.vm.provision "shell" , path: "setup.sh"

  config.vm.provision "shell", inline: <<-EOT
        # timezone
        cp -p /usr/share/zoneinfo/Japan /etc/localtime
        # iptables off
        /sbin/iptables -F
        /sbin/service iptables stop
        /sbin/chkconfig iptables off
        # Apache
        yum -y install httpd
        /sbin/service httpd restart
        /sbin/chkconfig httpd on

        cd /var/www/html/
        git clone https://github.com/angular/quickstart.git quickstart
        cd quickstart
        npm install
        npm start
  EOT

  #if ARGV[0] == 'up'
    # 先に Ansible 1.x をインストールさせる
   # config.vm.provision :shell, path: "install-ansible.sh"

    # config.vm.provision "ansible_local" do |ansible|
    #   ansible.playbook = "./provision/site.yml"
    # end
  #end

  config.vm.provision :shell, run: "always", :inline => <<-EOT
      sudo service httpd restart
  EOT

end
